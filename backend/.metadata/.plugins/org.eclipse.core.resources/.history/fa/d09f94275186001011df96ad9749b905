//package com.wipro.orderms.controller;
//
//import com.wipro.orderms.dto.CartAddRequest;
//import com.wipro.orderms.dto.CartUpdateRequest;
//import com.wipro.orderms.entity.Cart;
//import com.wipro.orderms.service.CartService;
//import jakarta.validation.Valid;
//import lombok.RequiredArgsConstructor;
//import org.springframework.web.bind.annotation.*;
//
//@RestController
//@RequestMapping("/cart")
//@RequiredArgsConstructor
//public class CartController {
//
//  private final CartService svc;
//
//  // 1) Add Product to Cart: /cart/addProd (POST)
//  @PostMapping("/addProd")
//  public Cart add(@Valid @RequestBody CartAddRequest req) { return svc.add(req); }
//
//  // 2) Delete product from Cart: /cart/deleteProd/{itemid} (DELETE)
//  @DeleteMapping("/deleteProd/{itemid}")
//  public Cart delete(@PathVariable("itemid") Integer productId, @RequestParam Integer userId) {
//    return svc.delete(userId, productId);
//  }
//
//  // 3) Change Qty: /cart/update (PUT)
//  @PutMapping("/update")
//  public Cart update(@Valid @RequestBody CartUpdateRequest req) { return svc.update(req); }
//
//  // 4) View cart: /cart/{userId} (GET)
//  @GetMapping("/{userId}")
//  public Cart view(@PathVariable Integer userId) { return svc.view(userId); }
//}
package com.wipro.orderms.controller;

import com.wipro.orderms.dto.*;
import com.wipro.orderms.service.CartService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/cart")
@RequiredArgsConstructor
@CrossOrigin(origins = "*")
public class CartController {

  private final CartService service;

  // 1) Add Product -> POST /cart/addProd
  @PostMapping("/addProd")
  public CartResponse add(@RequestBody AddOrUpdateReq req) {
    return service.addProduct(req);
  }

  // 3) Change Qty -> PUT /cart/update
  @PutMapping("/update")
  public CartResponse update(@RequestBody AddOrUpdateReq req) {
    return service.updateQuantity(req);
  }

  // 2) Delete product -> DELETE /cart/deleteProd/{userId}/{productId}
  @DeleteMapping("/deleteProd/{userId}/{productId}")
  public String delete(@PathVariable Integer userId, @PathVariable Integer productId) {
    service.deleteProduct(userId, productId);
    return "OK";
  }

  // 4) View cart -> GET /cart/{userId}
  @GetMapping("/{userId}")
  public CartResponse get(@PathVariable Integer userId) {
    return service.getCart(userId);
  }
}

